#!/bin/bash
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
GRAY="\033[0;37m"
RESET="\033[0m"

TIMEOUT=300
TMP="$(mktemp -d --suffix="ftmsf")"

[[ "$1" ]] || { echo -e "Usage: $0 <config>"; exit 1; }
config="$1"

while read line;do
    [[ "$line" ]] || continue

    if [[ "${line:0:1}" == ":" ]];then
        section="${line:1}"
        continue
    fi
    case "$section" in
    "search")
        case "$(cut -d" " -f1 <<< "$line")" in
        "type")
            line="$(cut -d" " -f2- <<< "$line")"
            types+=("$line")
            search+=("type:$line")
            ;;
        "name") search+=("name:$(cut -d" " -f2 <<< "$line")") ;;
        "exclude") exclude+=($(cut -d" " -f2- <<< "$line")) ;;
        *)
            echo -e "[$RED KO $RESET] Invalid key: $key"
            exit 1
            ;;
        esac
        ;;
    "args") args+=("$line") ;;
    esac
done<"$config"

payload="search ${search[@]}; exit"
while read line;do
    [[ "$line" ]] || continue

    for exclude in "${exclude[@]}";do
        grep -q "$exclude" <<< "$line" && continue 2
    done
    line="$(cut -d" " -f2- <<< "$line"\
        | sed 's=^[[:space:]]==')"

    for type in "${types[@]}";do
        if grep -q "^$type" <<< "$line";then
            keepit=1
            break
        fi
    done
    [[ "$keepit" ]] || continue
    unset keepit

    torun+=("$(cut -d" " -f1 <<< "$line")")
done< <(msfconsole -qx "$payload")

echo -e "[$GREEN OK $RESET] Found ${#torun[@]} modules"
echo -e "$GRAY========ARGS$RESET"
for arg in "${args[@]}";do echo "$arg";done
echo -e "$GRAY========>$RESET"

count=0
for module in "${torun[@]}";do
    echo -e "Running $module..."
    payload="search $module; use 0;"
    for arg in "${args[@]}";do payload+=" set $arg;";done
    payload+=" run; exit"

    output="$(timeout "$TIMEOUT" msfconsole -qx "$payload")"
    echo -e "$output"
    if grep -q "\[+\]" <<< "$output"; then
        echo -e "$output" > "$TMP/$module.success"
        ((count++))
    fi
done
if [[ "$count" -eq 0 ]]; then
    echo -e "[$RED KO $RESET] No modules succeeded"
    exit 1
fi
echo -e "[$GREEN OK $RESET] $count modules succeeded (see $TMP)"
